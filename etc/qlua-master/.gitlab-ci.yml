# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.7

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIP_CACHE_DIR: ".cache/pip"
  VENV_DIR: ".venv"
  SOURCE_REPO: "src"

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - .cache/pip
    - .eggs
    - .venv

stages:
  - setup
  - build
  - test
  - deploy

before_script:
  - cd $CI_PROJECT_DIR
  - source $VENV_DIR/bin/activate

make_venv:
  stage: setup
  before_script:
    - cd $CI_PROJECT_DIR
  script:
    - python3 -V
    - python3 -m venv $VENV_DIR
    - source $VENV_DIR/bin/activate
    - pip3 install -U pip
    - pip3 install -U wheel
    - pip3 install -U twine
    - pip3 install -U -r requirements-build.txt
    - pip3 install -U -r requirements-test.txt
    - pip3 install -U -r requirements.txt

build:
  stage: build
  script:
    - python3 -m SCons
    - python3 setup.py bdist_wheel
  artifacts:
    paths:
      - qlua/rpc
      - dist/*.whl

test_dist:
  stage: test
  script:
    - python3 setup.py test
    - pip3 install dist/*.whl
    - python3 -m qlua -v
  artifacts:
    paths:
      - qlua/rpc
      - dist/*.whl

test_version:
  stage: test
  script:
    - pip3 install dist/*.whl
    - export PACKAGE_VERSION=$(pip3 show qlua | grep "Version:" | cut -d" " -f2-)
    - export QLUA_VERSION=$(python3 -m qlua -v)
    - export PYPI_VERSION=$(pip search qlua | grep -Po '\(\K[^\)]*')
    - echo package=$PACKAGE_VERSION qlua=$QLUA_VERSION pypi=$PYPI_VERSION
    - if [ v$PACKAGE_VERSION != $CI_COMMIT_TAG ]; then exit 1; fi
    - if [ $PACKAGE_VERSION != $QLUA_VERSION ]; then exit 1; fi
    - if [ $PACKAGE_VERSION <= $PYPI_VERSION ]; then exit 1; fi
  artifacts:
    paths:
      - dist/*.whl

test_deploy:
  stage: test
  script:
    - pip3 install dist/*.whl
    - export PACKAGE_VERSION=$(pip3 show qlua | grep "Version:" | cut -d" " -f2-)
    - echo tag=$CI_COMMIT_TAG package=$PACKAGE_VERSION
    - if [ v$PACKAGE_VERSION != $CI_COMMIT_TAG ]; then exit 1; fi
    - if [ -z $TWINE_PASSWORD ]; then exit 1; fi
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/
  artifacts:
    paths:
      - dist/*.whl

deploy_pypi:
  stage: deploy
  script:
    - python3 -m twine upload --username __token__ dist/*.whl
  rules:
    - if: $CI_DEPLOY_FREEZE == null && $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/
  artifacts:
    paths:
      - dist/*.whl

# gitlab:
#   stage: deploy
#   variables:
#     PACKAGE_VERSION: $(pip3 show qlua | grep "Version:" | cut -d" " -f2-)
#   script:
#     - python3 -m twine upload --username __token__ dist/*.whl
#   rules:
#     - if: $CI_DEPLOY_FREEZE == null && $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/
#   dependencies:
#     - pypi
#   Todo: Replace on next GitLab version.
#   release:
#     name: $PACKAGE_VERSION
#     description: "New release: v$PACKAGE_VERSION"
#     assets:
#       - name: qlua-$PACKAGE_VERSION-py3-none-any.whl
#         path: dist/qlua-$PACKAGE_VERSION-py3-none-any.whl
#   artifacts:
#     paths:
#       - dist/*.whl
